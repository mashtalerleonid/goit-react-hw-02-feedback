{"version":3,"sources":["components/Feedback/Section/Section.jsx","components/Feedback/FeedbackOptions/FeedbackOptions.styled.jsx","components/Feedback/FeedbackOptions/FeedbackOptions.jsx","components/Feedback/Statistics/Statistics.styled.jsx","components/Feedback/Statistics/Statistics.jsx","components/Feedback/FeedbackSection/FeedbackSection.jsx","App.jsx","index.js"],"names":["Section","title","children","Button","styled","button","FeedbackOptions","onLeaveFeedback","options","keys","Object","map","key","type","onClick","FeedbakcTypes","div","Type","p","Statistics","state","total","positivePercentage","FeedbackSection","good","neutral","bad","veryBad","handleFeedback","e","feedbackOption","target","dataset","option","setState","prev","countTotalFeedback","values","reduce","acc","countPositiveFeedbackPercentage","Math","round","this","props","Component","defaultProps","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iQAgBeA,I,EAAAA,EAdf,YAAuC,IAApBC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,SACxB,OACE,gCACE,6BAAKD,IACJC,M,cCJMC,EAASC,IAAOC,OAAV,mDC0BJC,I,IAAAA,EAzBf,YAAwD,IAA7BC,EAA4B,EAA5BA,gBAAiBC,EAAW,EAAXA,QACpCC,EAAOC,OAAOD,KAAKD,GACzB,OACE,8BACGC,EAAKE,KAAI,SAAAC,GACR,OACE,cAACT,EAAD,CAEEU,KAAK,SACL,cAAaD,EACbE,QAASP,EAJX,SAMGC,EAAQI,IALJA,SCRJG,EAAgBX,IAAOY,IAAV,8CAIbC,EAAOb,IAAOc,EAAV,mDCwBFC,MA3Bf,YAAoE,IAA9CX,EAA6C,EAA7CA,QAASY,EAAoC,EAApCA,MAAOC,EAA6B,EAA7BA,MAAOC,EAAsB,EAAtBA,mBACrCb,EAAOC,OAAOD,KAAKD,GACzB,OACE,gCACE,cAACO,EAAD,UACGN,EAAKE,KAAI,SAAAC,GACR,OACE,eAACK,EAAD,WACGT,EAAQI,GADX,KACmBQ,EAAMR,KADdA,QAOjB,wCAAWS,KACX,oDAAuBC,EAAvB,WCZAC,E,4MAUJH,MAAQ,CACNI,KAAM,EACNC,QAAS,EACTC,IAAK,EACLC,QAAS,G,EAGXC,eAAiB,SAAAC,GACf,IAAMC,EAAiBD,EAAEE,OAAOC,QAAQC,OAExC,EAAKC,UAAS,SAAAC,GAAI,sBACfL,EAAiBK,EAAKL,GAAkB,O,EAI7CM,mBAAqB,WAEnB,OADe1B,OAAO2B,OAAO,EAAKjB,OACpBkB,QAAO,SAACC,EAAKF,GACzB,OAAOE,EAAMF,IACZ,I,EAGLG,gCAAkC,WAChC,OAAOC,KAAKC,MAAO,EAAKtB,MAAMI,KAAO,EAAKY,qBAAwB,M,4CAGpE,WACE,OACE,gCACE,cAAC,EAAD,CAASnC,MAAM,wBAAf,SACE,cAAC,EAAD,CACEM,gBAAiBoC,KAAKf,eACtBpB,QAASmC,KAAKC,MAAMpC,YAGvBmC,KAAKP,qBACJ,cAAC,EAAD,CAASnC,MAAM,aAAf,SACE,cAAC,EAAD,CACEO,QAASmC,KAAKC,MAAMpC,QACpBY,MAAOuB,KAAKvB,MACZC,MAAOsB,KAAKP,qBACZd,mBAAoBqB,KAAKH,sCAI7B,yD,GAvDoBK,aAAxBtB,EACGuB,aAAe,CACpBtC,QAAS,CACPgB,KAAM,OACNC,QAAS,UACTC,IAAK,MACLC,QAAS,aAwDAJ,QC5DAwB,MAJf,WACE,OAAO,cAAC,EAAD,KCATC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.db0d0b5e.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\r\n\r\nfunction Section({ title, children }) {\r\n  return (\r\n    <div>\r\n      <h1>{title}</h1>\r\n      {children}\r\n    </div>\r\n  );\r\n}\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  children: PropTypes.node,\r\n};\r\n\r\nexport default Section;\r\n","import styled from '@emotion/styled';\r\n\r\nexport const Button = styled.button`\r\n  margin-right: 10px;\r\n`;\r\n","import PropTypes from 'prop-types';\r\nimport { Button } from './FeedbackOptions.styled';\r\n\r\nfunction FeedbackOptions({ onLeaveFeedback, options }) {\r\n  const keys = Object.keys(options);\r\n  return (\r\n    <div>\r\n      {keys.map(key => {\r\n        return (\r\n          <Button\r\n            key={key}\r\n            type=\"button\"\r\n            data-option={key}\r\n            onClick={onLeaveFeedback}\r\n          >\r\n            {options[key]}\r\n          </Button>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n}\r\n\r\nFeedbackOptions.propTypes = {\r\n  onLeaveFeedback: PropTypes.func,\r\n  options: PropTypes.objectOf(PropTypes.string),\r\n};\r\n\r\nexport default FeedbackOptions;\r\n","import styled from '@emotion/styled';\r\n\r\nexport const FeedbakcTypes = styled.div`\r\n  display: flex;\r\n`;\r\n\r\nexport const Type = styled.p`\r\n  margin-right: 10px;\r\n`;\r\n","import { FeedbakcTypes, Type } from './Statistics.styled';\r\nimport PropTypes from 'prop-types';\r\n\r\nfunction Statistics({ options, state, total, positivePercentage }) {\r\n  const keys = Object.keys(options);\r\n  return (\r\n    <div>\r\n      <FeedbakcTypes>\r\n        {keys.map(key => {\r\n          return (\r\n            <Type key={key}>\r\n              {options[key]}: {state[key]}\r\n            </Type>\r\n          );\r\n        })}\r\n      </FeedbakcTypes>\r\n\r\n      <p>Total: {total}</p>\r\n      <p>Positive feedback: {positivePercentage}%</p>\r\n    </div>\r\n  );\r\n}\r\n\r\nStatistics.propTypes = {\r\n  state: PropTypes.objectOf(PropTypes.number),\r\n  options: PropTypes.objectOf(PropTypes.string),\r\n  total: PropTypes.number.isRequired,\r\n  positivePercentage: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default Statistics;\r\n","import React, { Component } from 'react';\r\nimport Section from 'components/Feedback/Section';\r\nimport FeedbackOptions from 'components/Feedback/FeedbackOptions';\r\nimport Statistics from 'components/Feedback/Statistics';\r\n\r\n// Зробив це завдання так, що для того, щоб добавити четверту, повністю працюючу опцію, потрібно добавити у код ЛИШЕ 2 рядки (ті, що закоментовані)\r\nclass FeedbackSection extends Component {\r\n  static defaultProps = {\r\n    options: {\r\n      good: 'Good',\r\n      neutral: 'Neutral',\r\n      bad: 'Bad',\r\n      veryBad: 'Very bad',\r\n    },\r\n  };\r\n\r\n  state = {\r\n    good: 0,\r\n    neutral: 0,\r\n    bad: 0,\r\n    veryBad: 0,\r\n  };\r\n\r\n  handleFeedback = e => {\r\n    const feedbackOption = e.target.dataset.option;\r\n\r\n    this.setState(prev => ({\r\n      [feedbackOption]: prev[feedbackOption] + 1,\r\n    }));\r\n  };\r\n\r\n  countTotalFeedback = () => {\r\n    const values = Object.values(this.state);\r\n    return values.reduce((acc, values) => {\r\n      return acc + values;\r\n    }, 0);\r\n  };\r\n\r\n  countPositiveFeedbackPercentage = () => {\r\n    return Math.round((this.state.good / this.countTotalFeedback()) * 100);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Section title=\"Please leave feedback\">\r\n          <FeedbackOptions\r\n            onLeaveFeedback={this.handleFeedback}\r\n            options={this.props.options}\r\n          />\r\n        </Section>\r\n        {this.countTotalFeedback() ? (\r\n          <Section title=\"Statistics\">\r\n            <Statistics\r\n              options={this.props.options}\r\n              state={this.state}\r\n              total={this.countTotalFeedback()}\r\n              positivePercentage={this.countPositiveFeedbackPercentage()}\r\n            />\r\n          </Section>\r\n        ) : (\r\n          <p>No feedback given</p>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default FeedbackSection;\r\n","import React from 'react';\n\nimport FeedbackSection from 'components/Feedback/FeedbackSection';\n\nfunction App() {\n  return <FeedbackSection />;\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}